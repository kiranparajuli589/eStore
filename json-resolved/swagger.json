{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is an `API documentation` for the [iStore](https://github.com/kiranparajuli589/eStore) Django Rest Framework project.\n\nThe `swagger-ui` view can be found [here](/cached/swagger).\nThe `ReDoc` view can be found [here](/cached/redoc).\nThe `swagger YAML` document can be found [here](/cached/swagger.yaml).\n\nYou can log in using the pre-existing `admin@test.com` user with password `admin`.",
    "version" : "1.0.0",
    "title" : "iStore API Documentation",
    "termsOfService" : "https://www.google.com/policies/terms/",
    "contact" : {
      "email" : "test@kiran.local"
    },
    "license" : {
      "name" : "BSD License"
    }
  },
  "host" : "localhost:8000",
  "basePath" : "/api/v1/accounts",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "security" : [ {
    "Basic" : [ ]
  }, {
    "Bearer" : [ ]
  }, {
    "OAuth2 Password" : [ ]
  } ],
  "paths" : {
    "/user/login/" : {
      "post" : {
        "tags" : [ "user" ],
        "description" : "Login a user instance",
        "operationId" : "user_login_create",
        "parameters" : [ {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Login"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Login success."
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "User not found"
          }
        },
        "security" : [ ]
      }
    },
    "/user/reset-password/" : {
      "post" : {
        "tags" : [ "user" ],
        "description" : "Reset user password -> Sends PIN to provided email address",
        "operationId" : "user_reset-password_create",
        "parameters" : [ {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResetPasswordEmail"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Send reset-password link sent to provided mail address."
          },
          "400" : {
            "description" : "Validation error (Existing password, strength)"
          },
          "403" : {
            "description" : "Forbidden (Wrong existing password)"
          }
        },
        "security" : [ ]
      }
    },
    "/user/reset/password/{code}/" : {
      "post" : {
        "tags" : [ "user" ],
        "description" : "Reset Password Confirm",
        "operationId" : "user_reset_password_create",
        "parameters" : [ {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResetNewPassword"
          }
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "base64 uuid code",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ResetNewPassword"
            }
          },
          "100" : {
            "description" : "Reset password success."
          },
          "400" : {
            "description" : "Validation error (password strength, length)"
          },
          "404" : {
            "description" : "Code not found"
          }
        },
        "security" : [ ]
      }
    },
    "/user/update-password/" : {
      "post" : {
        "tags" : [ "user" ],
        "description" : "Update password for authenticated user",
        "operationId" : "user_update-password_create",
        "parameters" : [ {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdatePassword"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Update password success."
          },
          "400" : {
            "description" : "Validation error (strength, confirm password)"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "OAuth2 Password" : [ ]
        } ]
      }
    },
    "/user/{id}/" : {
      "get" : {
        "tags" : [ "user" ],
        "description" : "Retrieve a user instance.",
        "operationId" : "user_read",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of a user instance.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "user" ],
        "description" : "Modify a user instance",
        "operationId" : "user_update",
        "parameters" : [ {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserUpdate"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of a user instance.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UserUpdate"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "description" : "Delete a user instance",
        "operationId" : "user_delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of a user instance.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "204" : {
            "description" : "Delete success."
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "patch" : {
        "tags" : [ "user" ],
        "description" : "Modify a user instance",
        "operationId" : "user_partial_update",
        "parameters" : [ {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserUpdate"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of a user instance.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UserUpdate"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/users/" : {
      "get" : {
        "tags" : [ "users" ],
        "description" : "List users",
        "operationId" : "users_list",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "users" ],
        "description" : "Create user",
        "operationId" : "users_create",
        "parameters" : [ {
          "in" : "body",
          "name" : "data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Basic" : {
      "type" : "basic"
    },
    "Bearer" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header"
    },
    "OAuth2 Password" : {
      "type" : "oauth2",
      "tokenUrl" : "http://localhost:8000/o/token/",
      "flow" : "password",
      "scopes" : {
        "read" : "Read everything.",
        "write" : "Write everything,"
      }
    }
  },
  "definitions" : {
    "Login" : {
      "type" : "object",
      "required" : [ "email", "password" ],
      "properties" : {
        "email" : {
          "type" : "string",
          "format" : "email",
          "title" : "Email",
          "minLength" : 1
        },
        "password" : {
          "type" : "string",
          "title" : "Password",
          "minLength" : 1,
          "maxLength" : 64
        }
      }
    },
    "ResetPasswordEmail" : {
      "type" : "object",
      "required" : [ "email" ],
      "properties" : {
        "email" : {
          "type" : "string",
          "format" : "email",
          "title" : "Email",
          "minLength" : 1
        }
      }
    },
    "ResetNewPassword" : {
      "type" : "object",
      "required" : [ "confirm_password", "new_password" ],
      "properties" : {
        "new_password" : {
          "type" : "string",
          "title" : "New password",
          "minLength" : 1
        },
        "confirm_password" : {
          "type" : "string",
          "title" : "Confirm password",
          "minLength" : 1
        }
      }
    },
    "UpdatePassword" : {
      "type" : "object",
      "required" : [ "confirm_password", "new_password", "password" ],
      "properties" : {
        "password" : {
          "type" : "string",
          "title" : "Password",
          "minLength" : 1
        },
        "new_password" : {
          "type" : "string",
          "title" : "New password",
          "minLength" : 1
        },
        "confirm_password" : {
          "type" : "string",
          "title" : "Confirm password",
          "minLength" : 1
        }
      }
    },
    "User" : {
      "type" : "object",
      "required" : [ "email", "f_name", "l_name", "password" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "title" : "ID",
          "readOnly" : true
        },
        "password" : {
          "type" : "string",
          "title" : "Password",
          "minLength" : 1,
          "maxLength" : 128
        },
        "last_login" : {
          "type" : "string",
          "format" : "date-time",
          "title" : "Last login",
          "x-nullable" : true
        },
        "f_name" : {
          "type" : "string",
          "title" : "First Name",
          "minLength" : 1,
          "maxLength" : 50
        },
        "l_name" : {
          "type" : "string",
          "title" : "Last Name",
          "minLength" : 1,
          "maxLength" : 50
        },
        "address" : {
          "type" : "string",
          "title" : "Address",
          "maxLength" : 50,
          "x-nullable" : true
        },
        "phone" : {
          "type" : "string",
          "title" : "Phone Number",
          "maxLength" : 128,
          "x-nullable" : true
        },
        "email" : {
          "type" : "string",
          "format" : "email",
          "title" : "Email Address",
          "minLength" : 1,
          "maxLength" : 50
        },
        "date_created" : {
          "type" : "string",
          "format" : "date-time",
          "title" : "Date of Registration"
        },
        "is_admin" : {
          "type" : "boolean",
          "title" : "Is admin"
        },
        "is_staff" : {
          "type" : "boolean",
          "title" : "Is staff"
        },
        "is_active" : {
          "type" : "boolean",
          "title" : "Is active"
        }
      }
    },
    "UserUpdate" : {
      "type" : "object",
      "required" : [ "email", "f_name", "l_name" ],
      "properties" : {
        "f_name" : {
          "type" : "string",
          "title" : "First Name",
          "minLength" : 1,
          "maxLength" : 50
        },
        "l_name" : {
          "type" : "string",
          "title" : "Last Name",
          "minLength" : 1,
          "maxLength" : 50
        },
        "email" : {
          "type" : "string",
          "format" : "email",
          "title" : "Email Address",
          "minLength" : 1,
          "maxLength" : 50
        },
        "address" : {
          "type" : "string",
          "title" : "Address",
          "maxLength" : 50,
          "x-nullable" : true
        },
        "phone" : {
          "type" : "string",
          "title" : "Phone Number",
          "maxLength" : 128,
          "x-nullable" : true
        },
        "is_active" : {
          "type" : "boolean",
          "title" : "Is active"
        },
        "is_staff" : {
          "type" : "boolean",
          "title" : "Is staff"
        },
        "is_admin" : {
          "type" : "boolean",
          "title" : "Is admin"
        }
      }
    },
    "UserCreate" : {
      "type" : "object",
      "required" : [ "email", "f_name", "l_name", "password" ],
      "properties" : {
        "f_name" : {
          "type" : "string",
          "title" : "First Name",
          "minLength" : 1,
          "maxLength" : 50
        },
        "l_name" : {
          "type" : "string",
          "title" : "Last Name",
          "minLength" : 1,
          "maxLength" : 50
        },
        "email" : {
          "type" : "string",
          "format" : "email",
          "title" : "Email Address",
          "minLength" : 1,
          "maxLength" : 50
        },
        "password" : {
          "type" : "string",
          "title" : "Password",
          "minLength" : 1,
          "maxLength" : 128
        },
        "is_active" : {
          "type" : "boolean",
          "title" : "Is active"
        },
        "is_admin" : {
          "type" : "boolean",
          "title" : "Is admin"
        },
        "is_staff" : {
          "type" : "boolean",
          "title" : "Is staff"
        },
        "address" : {
          "type" : "string",
          "title" : "Address",
          "maxLength" : 50,
          "x-nullable" : true
        },
        "phone" : {
          "type" : "string",
          "title" : "Phone Number",
          "maxLength" : 128,
          "x-nullable" : true
        }
      }
    }
  }
}