{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "iStore",
    "description" : "The API for the iStore project",
    "contact" : {
      "name" : "Kiran Parajuli",
      "url" : "https://github.com/kiranparajuli589",
      "email" : "kiranparajuli589@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://localhost:8000",
    "description" : "iStore Documentation"
  } ],
  "paths" : {
    "/api/v1/accounts/users/" : {
      "get" : {
        "summary" : "Returns a list of users",
        "description" : "Optional extended description in CommonMark or HTML",
        "responses" : {
          "200" : {
            "description" : "A JSON array of user names",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      },
      "post" : {
        "summary" : "Creates a user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UserRequest"
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/api/v1/accounts/user/{userId}" : {
      "get" : {
        "summary" : "Returns a user by ID.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of the user to return.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A user object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing or invalid"
          },
          "404" : {
            "description" : "A user with the specified ID was not found."
          }
        },
        "security" : [ {
          "oAuthSample" : [ "write_pets", "read_pets" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserResponse" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1
          },
          "f_name" : {
            "type" : "string",
            "example" : "Kiran"
          },
          "l_name" : {
            "type" : "string",
            "example" : "Parajuli"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "password" : {
            "type" : "string",
            "format" : "password"
          },
          "last_login" : {
            "type" : "string",
            "format" : "date-time"
          },
          "address" : {
            "type" : "string",
            "example" : "Pokhara"
          },
          "phone" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 9875632145
          },
          "date_created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "is_admin" : {
            "type" : "boolean"
          },
          "is_staff" : {
            "type" : "boolean"
          },
          "is_active" : {
            "type" : "boolean"
          }
        }
      },
      "UserRequest" : {
        "required" : [ "email", "f_name", "l_name", "password" ],
        "properties" : {
          "f_name" : {
            "type" : "string",
            "example" : "Kiran"
          },
          "l_name" : {
            "type" : "string",
            "example" : "Parajuli"
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "password" : {
            "type" : "string",
            "format" : "password"
          },
          "address" : {
            "type" : "string",
            "example" : "Pokhara"
          },
          "phone" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 9875632145
          },
          "is_admin" : {
            "type" : "boolean"
          },
          "is_staff" : {
            "type" : "boolean"
          },
          "is_active" : {
            "type" : "boolean"
          }
        }
      }
    },
    "responses" : {
      "UnauthorizedError" : {
        "description" : "Access token is missing or invalid"
      }
    },
    "securitySchemes" : {
      "oAuthSample" : {
        "type" : "oauth2",
        "description" : "This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)",
        "flows" : {
          "password" : {
            "tokenUrl" : "/o/token",
            "scopes" : {
              "read" : "Grant read-only access to all your data",
              "write" : "Grant write-only access to all your data"
            }
          }
        }
      },
      "basicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  }
}